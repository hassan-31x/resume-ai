// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id                    String                 @id @default(auto()) @map("_id") @db.ObjectId
  name                  String?
  email                 String?                @unique
  emailVerified         DateTime?
  image                 String?
  password              String?
  role                  UserRole               @default(USER)
  accounts              Account[]
  isTwoFactorEnabled    Boolean                @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
  templates             Template[]             @relation("CreatedTemplates")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @map("user_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model ResetPasswordToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  @@unique([userId])
}

enum TemplateCategory {
  PROFESSIONAL
  ACADEMIC
  CREATIVE
  TECHNICAL
  ENTRY_LEVEL
  EXECUTIVE
  OTHER
}

model Template {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  htmlContent String           // HTML content of the template
  cssStyles   String           // CSS styles for the template
  thumbnail   String?          // URL to template thumbnail image
  category    TemplateCategory @default(PROFESSIONAL)
  tags        String[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  isPublic    Boolean          @default(true)
  
  // Template styling options
  primaryColor    String       @default("#4A6CF7")  // Primary color for accents
  secondaryColor  String       @default("#6E82A6")  // Secondary color for less important elements
  fontFamily      String       @default("'Inter', sans-serif") // Main font family
  fontSize        Int          @default(14)         // Base font size in px
  lineHeight      Float        @default(1.5)        // Base line height
  sectionSpacing  Int          @default(24)         // Space between sections in px
  itemSpacing     Int          @default(12)         // Space between items in px
  
  // Relation to the user who created the template
  createdBy   User             @relation("CreatedTemplates", fields: [userId], references: [id])
  userId      String           @db.ObjectId

  // For easy identification of admin-created templates
  isAdminCreated Boolean       @default(false)
}
